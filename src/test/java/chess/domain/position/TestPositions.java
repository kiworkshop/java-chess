package chess.domain.position;

import org.junit.jupiter.params.provider.Arguments;

import java.util.stream.Stream;

class TestPositions {
    public static Stream<Arguments> generate() {
        return Stream.of(
                Arguments.of("a1", File.A, Rank.ONE),
                Arguments.of("a2", File.A, Rank.TWO),
                Arguments.of("a3", File.A, Rank.THREE),
                Arguments.of("a4", File.A, Rank.FOUR),
                Arguments.of("a5", File.A, Rank.FIVE),
                Arguments.of("a6", File.A, Rank.SIX),
                Arguments.of("a7", File.A, Rank.SEVEN),
                Arguments.of("a8", File.A, Rank.EIGHT),
                Arguments.of("b1", File.B, Rank.ONE),
                Arguments.of("b2", File.B, Rank.TWO),
                Arguments.of("b3", File.B, Rank.THREE),
                Arguments.of("b4", File.B, Rank.FOUR),
                Arguments.of("b5", File.B, Rank.FIVE),
                Arguments.of("b6", File.B, Rank.SIX),
                Arguments.of("b7", File.B, Rank.SEVEN),
                Arguments.of("b8", File.B, Rank.EIGHT),
                Arguments.of("c1", File.C, Rank.ONE),
                Arguments.of("c2", File.C, Rank.TWO),
                Arguments.of("c3", File.C, Rank.THREE),
                Arguments.of("c4", File.C, Rank.FOUR),
                Arguments.of("c5", File.C, Rank.FIVE),
                Arguments.of("c6", File.C, Rank.SIX),
                Arguments.of("c7", File.C, Rank.SEVEN),
                Arguments.of("c8", File.C, Rank.EIGHT),
                Arguments.of("d1", File.D, Rank.ONE),
                Arguments.of("d2", File.D, Rank.TWO),
                Arguments.of("d3", File.D, Rank.THREE),
                Arguments.of("d4", File.D, Rank.FOUR),
                Arguments.of("d5", File.D, Rank.FIVE),
                Arguments.of("d6", File.D, Rank.SIX),
                Arguments.of("d7", File.D, Rank.SEVEN),
                Arguments.of("d8", File.D, Rank.EIGHT),
                Arguments.of("e1", File.E, Rank.ONE),
                Arguments.of("e2", File.E, Rank.TWO),
                Arguments.of("e3", File.E, Rank.THREE),
                Arguments.of("e4", File.E, Rank.FOUR),
                Arguments.of("e5", File.E, Rank.FIVE),
                Arguments.of("e6", File.E, Rank.SIX),
                Arguments.of("e7", File.E, Rank.SEVEN),
                Arguments.of("e8", File.E, Rank.EIGHT),
                Arguments.of("f1", File.F, Rank.ONE),
                Arguments.of("f2", File.F, Rank.TWO),
                Arguments.of("f3", File.F, Rank.THREE),
                Arguments.of("f4", File.F, Rank.FOUR),
                Arguments.of("f5", File.F, Rank.FIVE),
                Arguments.of("f6", File.F, Rank.SIX),
                Arguments.of("f7", File.F, Rank.SEVEN),
                Arguments.of("f8", File.F, Rank.EIGHT),
                Arguments.of("g1", File.G, Rank.ONE),
                Arguments.of("g2", File.G, Rank.TWO),
                Arguments.of("g3", File.G, Rank.THREE),
                Arguments.of("g4", File.G, Rank.FOUR),
                Arguments.of("g5", File.G, Rank.FIVE),
                Arguments.of("g6", File.G, Rank.SIX),
                Arguments.of("g7", File.G, Rank.SEVEN),
                Arguments.of("g8", File.G, Rank.EIGHT),
                Arguments.of("h1", File.H, Rank.ONE),
                Arguments.of("h2", File.H, Rank.TWO),
                Arguments.of("h3", File.H, Rank.THREE),
                Arguments.of("h4", File.H, Rank.FOUR),
                Arguments.of("h5", File.H, Rank.FIVE),
                Arguments.of("h6", File.H, Rank.SIX),
                Arguments.of("h7", File.H, Rank.SEVEN),
                Arguments.of("h8", File.H, Rank.EIGHT)
        );
    }
}
